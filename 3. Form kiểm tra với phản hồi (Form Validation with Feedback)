//3. Form kiểm tra với phản hồi (Form Validation with Feedback)
Tạo form liên hệ tên “Form Validation with Feedback” có kiểm tra dữ liệu theo thời gian thực và hiển thị phản hồi trực quan bằng JavaScript và CSS.//
//Form Validation with Feedback
Implement a contact form named “Form Validation with Feedback” with real-time validation and visual feedback using JavaScript and CSS.//


<!DOCTYPE html>
<html lang="vi">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Form Validation with Feedback</title>
<style>
  body{font-family:system-ui,Arial;background:#f3f6fb;margin:0;display:flex;align-items:center;justify-content:center;min-height:100vh;padding:20px}
  .card{width:100%;max-width:420px;background:#fff;padding:20px;border-radius:10px;box-shadow:0 8px 20px rgba(0,0,0,.06)}
  h2{margin:0 0 10px}
  .group{margin-bottom:12px}
  label{display:block;font-weight:600;margin-bottom:6px}
  input,textarea{width:100%;padding:10px;border-radius:8px;border:1px solid #d6dde6;font-size:14px}
  textarea{resize:vertical;min-height:100px}
  .help{font-size:13px;color:#d9534f;margin-top:6px;display:none}
  .ok{border-color:#28a745;box-shadow:0 6px 18px rgba(40,167,69,.06)}
  .err{border-color:#e74c3c;box-shadow:0 6px 18px rgba(231,76,60,.04)}
  .help.show{display:block}
  button{background:#2b8aef;color:#fff;border:0;padding:10px 14px;border-radius:8px;cursor:pointer;font-weight:700}
</style>
</head>
<body>
  <div class="card">
    <h2>Contact Form</h2>
    <form id="form">
      <div class="group">
        <label for="name">Name</label>
        <input id="name" name="name" type="text" placeholder="Enter your name" />
        <div class="help" id="nameHelp">Name is required</div>
      </div>
      <div class="group">
        <label for="email">Email</label>
        <input id="email" name="email" type="email" placeholder="Enter your email" />
        <div class="help" id="emailHelp">Please enter a valid email</div>
      </div>
      <div class="group">
        <label for="msg">Message</label>
        <textarea id="msg" name="message" placeholder="Enter your message"></textarea>
        <div class="help" id="msgHelp">Message must be at least 6 characters</div>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>

<script>
  const form = document.getElementById('form');
  const nameEl = document.getElementById('name');
  const emailEl = document.getElementById('email');
  const msgEl = document.getElementById('msg');

  function validateName(){
    const val = nameEl.value.trim();
    const ok = val.length >= 1;
    toggleFeedback(nameEl, 'nameHelp', ok, ok ? '' : 'Name is required');
    return ok;
  }
  function validateEmail(){
    const val = emailEl.value.trim();
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const ok = re.test(val);
    toggleFeedback(emailEl, 'emailHelp', ok, ok ? '' : 'Please enter a valid email');
    return ok;
  }
  function validateMsg(){
    const val = msgEl.value.trim();
    const ok = val.length >= 6;
    toggleFeedback(msgEl, 'msgHelp', ok, ok ? '' : 'Message must be at least 6 characters');
    return ok;
  }

  function toggleFeedback(el, helpId, ok, text){
    el.classList.remove('ok','err');
    const help = document.getElementById(helpId);
    if(ok){ el.classList.add('ok'); help.classList.remove('show'); help.textContent=''; }
    else { el.classList.add('err'); help.classList.add('show'); help.textContent=text; }
  }

  nameEl.addEventListener('input', validateName);
  emailEl.addEventListener('input', validateEmail);
  msgEl.addEventListener('input', validateMsg);

  form.addEventListener('submit', (e)=>{
    e.preventDefault();
    const a = validateName(), b = validateEmail(), c = validateMsg();
    if(a && b && c){
      alert('Submitted! (demo)'); form.reset();
      [nameEl,emailEl,msgEl].forEach(x=>x.classList.remove('ok','err'));
    }
  });
</script>
</body>
</html>
